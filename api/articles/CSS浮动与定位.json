{"title":"CSS 浮动与定位","uid":"4013f73311e4ca4fab812149e312063d","slug":"CSS浮动与定位","date":"2021-07-20T16:00:00.000Z","updated":"2022-01-22T01:45:14.894Z","comments":true,"path":"api/articles/CSS浮动与定位.json","keywords":"webDesign","cover":[],"content":"<h3 id=\"float-的影响\"><a href=\"#float-的影响\" class=\"headerlink\" title=\"float 的影响\"></a><code>float</code> 的影响</h3><ul>\n<li><p><code>float</code> 属性指定一个元素应沿其容器的左侧或右侧放置，允许文本和内联元素环绕它</p>\n<ul>\n<li>浮动的元素可以向左或向右移动，直到它的外边缘碰到块框或另一个浮动元素的边框为止</li>\n<li>由于浮动元素不在文档的普通流中，所以文档的普通流中的块框表现得像浮动元素不存在一样</li>\n</ul>\n</li>\n<li><p><code>float</code> 属性的影响</p>\n<ul>\n<li>父元素，如果父元素没有设置高度，且其子元素都为浮动元素，那么其高度会发生坍塌</li>\n<li>其他浮动元素，其它浮动元素会贴在浮动元素的后面，如果剩余的空间不够，那么其它元素会分配到下一行</li>\n<li>普通元素，普通元素会占据浮动元素原来的位置</li>\n<li>文字，文字能识别到浮动元素的存在，会围绕着浮动元素</li>\n</ul>\n</li>\n<li><p>参考 <em><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/float\">CSS属性：float | MDN </a></em></p>\n</li>\n</ul>\n<h3 id=\"清除浮动的方法\"><a href=\"#清除浮动的方法\" class=\"headerlink\" title=\"清除浮动的方法\"></a>清除浮动的方法</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>清除浮动指当一个盒子使用 <code>float</code> 属性，解决其父级对象盒子高度无法撑开的问题</p></blockquote>\n<ul>\n<li><p>父元素设置 <code>overflow: hidden;</code> 会自动适配高度，即创建一个<a href=\"https://www.w3.org/TR/CSS22/visuren.html\">「BFC」</a></p>\n<ul>\n<li>需要配合 <code>width</code> 或者 <code>*zoom: 1;</code> 触发 <code>ie</code> 的 <code>haslayout</code> 属性来兼容 <code>ie6</code> 和 <code>ie7</code></li>\n<li>超出的内容会被隐藏，因此不宜和 <code>position</code> 配合使用</li>\n<li>若设置成 <code>overflow: auto;</code>，内容超出时会出现滚动条</li>\n</ul>\n</li>\n<li><p>父元素中的最后一个子元素设为 <code>&lt;br clear=&quot;both&quot;/&gt;</code>，或其他空元素，样式设为 <code>clear: both;</code></p>\n<ul>\n<li>当 <code>clear</code> 属性应用于非浮动块时，会将它的 <code>border edge</code> 移动到所有相关浮动元素<br><code>margin edge</code> 的下方，导致<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing\">「margin collapsing」</a>不起作用</li>\n<li>当 <code>clear</code> 属性应用于浮动元素时，会将它的 <code>margin edge</code> 移动到所有相关浮动元素<br><code>margin edge</code> 的下方，导致后面的浮动元素的位置无法高于它之前的元素</li>\n</ul>\n</li>\n<li><p>父元素设置伪元素 <code>:after</code>，同时添加以下属性</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">.parent-container:after &#123;\n    content:&quot;&quot;;     &#x2F;* 内容须设为空 *&#x2F;\n    display:block;\n    clear:both;\n&#125;\n.parent-container &#123;\n    *zoom: 1;       &#x2F;* 触发ie6，7的 haslayout 属性 *&#x2F;\n&#125;</code></pre></li>\n<li><p>父元素设置 <code>float</code>，同子元素一起浮动，较少使用</p>\n</li>\n<li><p>父元素设置 <code>height</code>，适用于浮动元素高度确定的情况，较少使用</p>\n</li>\n<li><p>父元素设置 <code>display</code> 属性值为 <code>table</code>，<code>table-cell</code>，<code>inline-block</code>等，不推荐使用</p>\n</li>\n<li><p>参考 <em><a href=\"https://www.w3.org/TR/CSS22/visuren.html#flow-control\">float | W3C</a>，<a href=\"http://w3help.org/zh-cn/casestudies/001\">清理浮动的几种方法</a>，<a href=\"http://www.iyunlu.com/view/css-xhtml/55.html\">那些年我们一起清除过的浮动 | iyunlu</a></em></p>\n</li>\n</ul>\n<h3 id=\"CSS定位\"><a href=\"#CSS定位\" class=\"headerlink\" title=\"CSS定位\"></a><code>CSS</code>定位</h3><ul>\n<li><p><code>CSS</code> 定位相关属性：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">属性</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">position</td>\n<td align=\"left\">将元素放置到一个静态的、相对的、绝对的、或固定的位置中</td>\n</tr>\n<tr>\n<td align=\"left\">top/right/bottom/left</td>\n<td align=\"left\">定义元素的外边距边界与其包含块边界之间的偏移</td>\n</tr>\n<tr>\n<td align=\"left\">overflow</td>\n<td align=\"left\">当元素的内容溢出其区域时的显示方式</td>\n</tr>\n<tr>\n<td align=\"left\">clip</td>\n<td align=\"left\">定义一个剪裁矩形，用来剪裁绝对定位元素</td>\n</tr>\n<tr>\n<td align=\"left\">vertical-align</td>\n<td align=\"left\">定义元素的垂直对齐方式</td>\n</tr>\n<tr>\n<td align=\"left\">z-index</td>\n<td align=\"left\">定义元素的堆叠次序</td>\n</tr>\n</tbody></table>\n</li>\n<li><p><code>CSS</code>有三种基本定位机制，除非专门指定，否则所有框都在普通流中定位：</p>\n<ul>\n<li>普通流 默认定位<code>static</code>和相对定位<code>relative</code></li>\n<li>浮动 <code>float</code></li>\n<li>绝对定位 <code>absolute</code></li>\n</ul>\n</li>\n<li><p><code>position</code> 属性规定的元素定位类型</p>\n<ul>\n<li><code>static</code><ul>\n<li>默认属性，指定元素使用文档的普通流</li>\n<li>此时 <code>top</code>, <code>right</code>,<code> bottom</code>, <code>left</code> 和 <code>z-index</code> 属性无效</li>\n</ul>\n</li>\n<li><code>relative</code><ul>\n<li>生成相对定位的元素，相对于其正常位置进行偏移</li>\n<li>元素位置通过 <code>left</code>, <code>top</code>, <code>right</code> 以及 <code>bottom</code> 的值来指定</li>\n<li>元素仍会占据原来的空间，不会破坏页面原始布局</li>\n<li>可以通过设置 <code>z-index</code> 属性来控制这些框的堆叠次序</li>\n</ul>\n</li>\n<li><code>absolute</code><ul>\n<li>生成绝对定位的元素，相对于最近的非 <code>static</code> 定位的祖先元素进行定位</li>\n<li>绝对定位的元素可以设置外边距 <code>margin</code>，且不会与其他边距合并</li>\n<li>不会预留空间，脱离了文档的普通流，可以覆盖页面上的其它元素</li>\n<li>可以通过设置 <code>z-index</code> 属性来控制这些框的堆叠次序</li>\n</ul>\n</li>\n<li><code>fixed</code><ul>\n<li>生成绝对定位的元素，类似 <code>absolute</code>，不过是相对于浏览器窗口进行定位</li>\n<li>页面顶部的导航条，回到顶部按钮等基本采用此定位方式</li>\n</ul>\n</li>\n</ul>\n<p>  其他全局值：</p>\n<ul>\n<li><code>inherit</code><ul>\n<li>从父元素继承，<code>IE8</code>之前不支持</li>\n</ul>\n</li>\n<li><code>initial</code><ul>\n<li>设置 <code>CSS</code> 属性为它的默认值，可作用于任何 <code>CSS</code> 样式</li>\n</ul>\n</li>\n<li><code>unset</code><ul>\n<li>如果该属性是默认继承属性，该值等同于 <code>inherit</code></li>\n<li>如果该属性是非继承属性，该值等同于 <code>initial</code></li>\n</ul>\n</li>\n</ul>\n<p>  <em>refer to <a href=\"http://www.w3school.com.cn/css/css_positioning.asp\">CSS定位 | w3school</a>，<a href=\"https://segmentfault.com/a/1190000003856280#articleHeader2\">CSS定位浮动 | segmentfault</a>，<a href=\"https://github.com/chokcoco/iCSS\">chokcoco:CSS进阶系列 | github</a>，<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/position\">CSS属性position | MDN</a></em></p>\n</li>\n<li><p><code>z-index</code> 属性设置元素的堆叠顺序</p>\n<ul>\n<li>拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面，即覆盖较小的那个</li>\n<li>元素可拥有负的 <code>z-index</code> 属性值，会在未设置 <code>z-index</code> 元素的后面</li>\n<li>仅能在定位元素（即 <code>position</code> 属性值是非 <code>static</code> 的元素）上奏效</li>\n</ul>\n<p><em>refer to <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Understanding_z_index\">理解CSS的z-index属性 | MDN</a>，<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\">层叠上下文 | MDN</a></em></p>\n</li>\n<li><p><code>position: relative</code> 和负 <code>margin</code> 的区别</p>\n<ul>\n<li><code>position: relative</code>元素偏移时，仍会占据原来的空间，不会破坏页面原始布局</li>\n<li>负 <code>margin</code> 偏移时，元素占据的空间会随着 <code>margin</code> 绝对值的增大而减小，当前容器的布局也会做出相应变化</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"BFC-块格式化上下文\"><a href=\"#BFC-块格式化上下文\" class=\"headerlink\" title=\"BFC 块格式化上下文\"></a><code>BFC</code> 块格式化上下文</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>块格式化上下文<code>block formatting context</code>是<code>Web</code>页面的可视化<code>CSS</code>渲染出的一部分。它是一个独立的渲染区域，规定了内部块级元素如何布局，并且与这个区域外部毫不相干。</p></blockquote>\n<ul>\n<li><p><code>BFC</code> 由以下任意项生成</p>\n<ul>\n<li><code>float</code> 属性值不为 <code>none</code></li>\n<li><code>overflow</code> 属性值不为 <code>visible</code></li>\n<li><code>position: absolute | fixed</code></li>\n<li><code>display: inline-block | table-cell | table-caption</code></li>\n<li>…</li>\n</ul>\n</li>\n<li><p><code>BFC</code> 的作用</p>\n<ul>\n<li>防止两个相邻块级盒子垂直外边距折叠</li>\n<li>清除浮动，避免父元素高度坍塌</li>\n<li>避免文字环绕浮动元素</li>\n<li>多列布局</li>\n</ul>\n</li>\n</ul>\n<p><em>refer to <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context\">块格式化上下文 | MDN</a>，<a href=\"https://segmentfault.com/a/1190000003068557#articleHeader5\">译文：理解CSS中的块级格式化上下文 | segmentfault</a>，<a href=\"http://blog.csdn.net/u012999771/article/details/49253059\">布局方案之-多列布局 | csdn</a></em></p>\n<h3 id=\"Margin-Collapsing-外边距合并\"><a href=\"#Margin-Collapsing-外边距合并\" class=\"headerlink\" title=\"Margin Collapsing 外边距合并\"></a><code>Margin Collapsing</code> 外边距合并</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>外边距合并指的是，当两个垂直外边距相遇时，它们将形成一个外边距</p></blockquote>\n<ul>\n<li><p>合并的三种情况：</p>\n<ul>\n<li>相邻的兄弟元素<ul>\n<li>第一个元素的下外边距与第二个元素的上外边距会发生合并</li>\n</ul>\n</li>\n<li>父元素与子元素（没有内边距或边框隔开）<ul>\n<li>第一个子元素的上外边距和父元素的上外边距</li>\n<li>最后一个子元素的下外边距和父元素的下外边距</li>\n</ul>\n</li>\n<li>空元素（没有边框或填充）<ul>\n<li>自身上下外边距重合</li>\n<li>如果这个外边距遇到另一个元素的外边距，它还会发生合并</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>合并后外边距的高度计算规则</p>\n<ul>\n<li>若都为正值，将取两个合并的外边距值中的较大者</li>\n<li>若都为负值，将取两个合并的外边距绝对值中的较大者，负向偏移</li>\n<li>若为一正一负，将取两者之和，和为负值则负向偏移</li>\n</ul>\n</li>\n<li><p>外边距不合并的方法</p>\n<p>只有普通文档流中块框的垂直外边距才会发生外边距合并，行内框、浮动框或绝对定位之间的外边距不会合并。因此可采用以下方法：</p>\n<ul>\n<li>设置 <code>inline-block</code>，浮动元素<code>float</code>，或绝对定位 <code>absolute | fixed</code></li>\n<li>针对父子元素，还可以给父元素设置 <code>border</code> 或 <code>padding</code>，或设置 <code>overflow: hidden | scroll | auto;</code></li>\n</ul>\n<p>父子元素外边距合并：</p>\n<p>  <img src=\"http://www.z4a.net/images/2017/10/09/0736s.png\" alt=\"0736s.png\"></p>\n<p><em>refer to <a href=\"http://www.w3school.com.cn/css/css_margin_collapsing.asp\">CSS 外边距合并 | w3school</a></em></p>\n</li>\n</ul>\n","feature":true,"text":"float 的影响 float 属性指定一个元素应沿其容器的左侧或右侧放置，允许文本和内联元素环绕它 浮动的元素可以向左或向右移动，直到它的外边缘碰到块框或另一个浮动元素的边框为止 由于浮动元素不在文档的普通流中，所以文档的普通流中的块框表现得像浮动元素不存在一样 float 属...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Front-End","slug":"Front-End","count":11,"path":"api/categories/Front-End.json"},{"name":"CSS","slug":"Front-End/CSS","count":8,"path":"api/categories/Front-End/CSS.json"}],"tags":[{"name":"css","slug":"css","count":6,"path":"api/tags/css.json"},{"name":"float","slug":"float","count":1,"path":"api/tags/float.json"},{"name":"定位","slug":"定位","count":1,"path":"api/tags/定位.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#float-%E7%9A%84%E5%BD%B1%E5%93%8D\"><span class=\"toc-text\">float 的影响</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">清除浮动的方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CSS%E5%AE%9A%E4%BD%8D\"><span class=\"toc-text\">CSS定位</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#BFC-%E5%9D%97%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%B8%8A%E4%B8%8B%E6%96%87\"><span class=\"toc-text\">BFC 块格式化上下文</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Margin-Collapsing-%E5%A4%96%E8%BE%B9%E8%B7%9D%E5%90%88%E5%B9%B6\"><span class=\"toc-text\">Margin Collapsing 外边距合并</span></a></li></ol>","author":{"name":"GUOWEI","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/gavinst/PicGoCDN/img/imgqBcR3R9huDgTp7QY.png","link":"/","description":"◽浩瀚苍穹 须臾人生◽</br>◽蜉蝣天地 沧海一粟◽</br>◽吾生有涯 而知无涯◽","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"How to connect CentOS8 VM to internet via NAT mode","uid":"0723a0f3da0efde08b22864279957623","slug":"CentOS8-VM-NAT-Mode","date":"2021-08-14T16:00:00.000Z","updated":"2022-01-21T18:29:22.357Z","comments":true,"path":"api/articles/CentOS8-VM-NAT-Mode.json","keywords":"webDesign","cover":[],"text":" 基本原理 通过VMnet8网卡实现主机与虚拟机之间的通信，在NAT模式中，主机网卡直接与虚拟NAT设备相连，然后虚拟NAT设备与虚拟DHCP服务器一起连接在虚拟交换机VMnet8上，这样就实现了虚拟机联网 启用VMware网址转换服务 win10WIN+R打开搜索框，输入ser...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"VMware","slug":"VMware","count":1,"path":"api/categories/VMware.json"}],"tags":[{"name":"vmware","slug":"vmware","count":1,"path":"api/tags/vmware.json"},{"name":"NAT","slug":"NAT","count":1,"path":"api/tags/NAT.json"},{"name":"centOS8","slug":"centOS8","count":1,"path":"api/tags/centOS8.json"}],"author":{"name":"GUOWEI","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/gavinst/PicGoCDN/img/imgqBcR3R9huDgTp7QY.png","link":"/","description":"◽浩瀚苍穹 须臾人生◽</br>◽蜉蝣天地 沧海一粟◽</br>◽吾生有涯 而知无涯◽","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"CSS样式优先级与继承性","uid":"f758076f79738b1ee81ce7270ca6173b","slug":"CSS样式优先级与继承性","date":"2021-07-17T16:00:00.000Z","updated":"2022-01-21T23:47:34.711Z","comments":true,"path":"api/articles/CSS样式优先级与继承性.json","keywords":"webDesign","cover":null,"text":"CSS 样式优先级 样式优先级可通过权重来体现，按照 a-b-c-d 的类别及次序计算权重 规则 通配符*，子选择器，相邻选择器等，计值 0，0，0，0 类别在前的拥有更高的优先级 同类别中，权重更大的拥有更高的优先级 同一元素中，后定义的样式规则优先于先定义的 权重计算* &#...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"Front-End","slug":"Front-End","count":11,"path":"api/categories/Front-End.json"},{"name":"CSS","slug":"Front-End/CSS","count":8,"path":"api/categories/Front-End/CSS.json"}],"tags":[{"name":"css","slug":"css","count":6,"path":"api/tags/css.json"}],"author":{"name":"GUOWEI","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/gavinst/PicGoCDN/img/imgqBcR3R9huDgTp7QY.png","link":"/","description":"◽浩瀚苍穹 须臾人生◽</br>◽蜉蝣天地 沧海一粟◽</br>◽吾生有涯 而知无涯◽","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}