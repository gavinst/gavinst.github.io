{"title":"form标签","uid":"4bb15f4ca0b213f02f58c79d3985ea55","slug":"form标签","date":"2021-06-21T16:00:00.000Z","updated":"2022-01-21T14:28:57.468Z","comments":true,"path":"api/articles/form标签.json","keywords":"webDesign","cover":null,"content":"<h3 id=\"HTML全局属性\"><a href=\"#HTML全局属性\" class=\"headerlink\" title=\"HTML全局属性\"></a><code>HTML</code>全局属性</h3><ul>\n<li><p><code>HTML</code>属性赋予元素意义和语境，全局属性可用于任何<code>HTML</code>元素</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>Html5新添</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>accesskey</td>\n<td>-</td>\n<td>规定激活元素的快捷键</td>\n</tr>\n<tr>\n<td>class</td>\n<td>-</td>\n<td>规定元素的一个或多个类名（引用样式表中的类）</td>\n</tr>\n<tr>\n<td>contenteditable</td>\n<td><em>new</em></td>\n<td>规定元素内容是否可编辑</td>\n</tr>\n<tr>\n<td>contextmenu</td>\n<td><em>new</em></td>\n<td>规定元素的上下文菜单，上下文菜单在用户点击元素时显示</td>\n</tr>\n<tr>\n<td>data-*</td>\n<td><em>new</em></td>\n<td>用于存储页面或应用程序的私有定制数据</td>\n</tr>\n<tr>\n<td>dir</td>\n<td>-</td>\n<td>规定元素中内容的文本方向</td>\n</tr>\n<tr>\n<td>draggable</td>\n<td><em>new</em></td>\n<td>规定元素是否可拖动</td>\n</tr>\n<tr>\n<td>dropzone</td>\n<td><em>new</em></td>\n<td>规定在拖动被拖动数据时是否进行复制、移动或链接</td>\n</tr>\n<tr>\n<td>hidden</td>\n<td><em>new</em></td>\n<td>规定元素仍未或不再相关</td>\n</tr>\n<tr>\n<td>id</td>\n<td>-</td>\n<td>规定元素的唯一 id</td>\n</tr>\n<tr>\n<td>lang</td>\n<td>-</td>\n<td>规定元素内容的语言</td>\n</tr>\n<tr>\n<td>spellcheck</td>\n<td><em>new</em></td>\n<td>规定是否对元素进行拼写检查</td>\n</tr>\n<tr>\n<td>style</td>\n<td>-</td>\n<td>规定元素的行内 CSS 样式</td>\n</tr>\n<tr>\n<td>tabindex</td>\n<td>-</td>\n<td>规定元素的 tab 键次序</td>\n</tr>\n<tr>\n<td>title</td>\n<td>-</td>\n<td>规定有关元素的额外信息</td>\n</tr>\n<tr>\n<td>translate</td>\n<td><em>new</em></td>\n<td>规定是否应该翻译元素内容</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h3 id=\"lt-form-gt-标签的定义与用法\"><a href=\"#lt-form-gt-标签的定义与用法\" class=\"headerlink\" title=\"&lt;form&gt;标签的定义与用法\"></a><code>&lt;form&gt;</code>标签的定义与用法</h3><ul>\n<li><p><code>&lt;form&gt;</code> 标签的属性</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>accept</td>\n<td><em>MIME_type</em></td>\n<td>HTML5 不支持</td>\n</tr>\n<tr>\n<td>accept-charset</td>\n<td><em>charset_list</em></td>\n<td>规定服务器可处理的表单数据字符集</td>\n</tr>\n<tr>\n<td>action</td>\n<td><em>URL</em></td>\n<td>规定当提交表单时向何处发送表单数据</td>\n</tr>\n<tr>\n<td>autocomplete</td>\n<td><em>on/off</em></td>\n<td>规定是否启用表单的自动完成功能</td>\n</tr>\n<tr>\n<td>enctype</td>\n<td></td>\n<td>规定在发送表单数据之前如何对其进行编码</td>\n</tr>\n<tr>\n<td>method</td>\n<td><em>get/post</em></td>\n<td>规定用于发送<code>form-data</code>的HTTP方法</td>\n</tr>\n<tr>\n<td>name</td>\n<td><em>form_name</em></td>\n<td>规定表单的名称</td>\n</tr>\n<tr>\n<td>novalidate</td>\n<td><em>novalidate</em></td>\n<td>如果使用该属性，则提交表单时不进行验证</td>\n</tr>\n<tr>\n<td>target</td>\n<td><em>_blank<br/>_self<br/>_parent<br/>_top<br/>framename</em></td>\n<td>规定在何处打开<code>action URL</code></td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<ul>\n<li><p><code>&lt;form&gt;</code> 标签用于为用户输入创建<code>HTML</code>表单</p>\n<ul>\n<li>表单能够包含 <code>input</code> 元素，根据不同的 <code>type</code> 属性值，输入字段拥有很多种形式，比如文本字段、复选框、单选框、掩码后的文本控件、提交按钮等</li>\n<li>表单还可以包含 <code>menus</code>、<code>textarea</code>、<code>fieldset</code>、<code>legend</code> 和 <code>label</code> 元素</li>\n<li>表单用于向服务器传输数据</li>\n</ul>\n</li>\n<li><p><code>&lt;form&gt;</code> 标签下的 <code>&lt;input&gt;</code> 标签多数情况下被用到的表单标签是 <code>&lt;input&gt;</code> 标签，输入类型是由类型属性 <code>&lt;type&gt;</code>定义的，常用的输入类型有</p>\n<ul>\n<li>文本域 <code>Text Field</code>：<code>&lt;input type=&quot;text&quot; name=&quot;&quot;/&gt;</code></li>\n<li>密码字段 <code>Password</code>：<code>&lt;input type=&quot;password&quot; name=&quot;password&quot;/&gt;</code></li>\n<li>提交按钮 <code>Submit Button</code>：<code>&lt;input type=&quot;submit&quot; value=&quot;submit&quot;/&gt;</code></li>\n<li>重置按钮 <code>Reset Button</code>：<code>&lt;input type=&quot;reset&quot; value=&quot;reset&quot;/&gt;</code></li>\n<li>单选按钮 <code>Radio Buttons</code>：<code>&lt;input type=&quot;radio&quot; name=&quot;&quot; value=&quot;&quot;/&gt;</code></li>\n<li>复选框 <code>Checkbox</code>：<code>&lt;input type=&quot;checkbox&quot; name=&quot;&quot; value=&quot;&quot;/&gt;</code></li>\n<li><code>&lt;input&gt;</code> 标签的 <code>name</code> 属性<ul>\n<li>规定 <code>input</code> 元素的名称，用于标识提交到服务器后的表单数据，或者在客户端通过 <code>JavaScript</code> 引用表单数据</li>\n<li>只有设置了 <code>name</code> 属性的表单元素才能在提交表单时传递它们的值</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><code>&lt;form&gt;</code>标签的<code>method</code>属性规定如何发送表单数据，表单数据可以作为<code>URL</code>变量<code>method=&quot;get&quot;</code>或者<code>HTTP post</code> <code>method=&quot;post&quot;</code>的方式来发送</p>\n<ul>\n<li>如果希望获得最佳表单传输性能，可以采用 <code>GET</code> 方法发送只有少数简短字段的小表单</li>\n<li>一些服务器操作系统在处理可以立即传递给应用程序的命令行参数时，会限制其数目和长度，在这种情况下，对那些有许多字段或是很长的文本域的表单来说，就应该采用 <code>POST</code> 方法来发送</li>\n<li>如果你在编写服务器端的表单处理应用程序方面经验不足，应该选择 <code>GET</code> 方法；如果采用 <code>POST</code> 方法，就要在读取和解码方法做些额外的工作</li>\n<li>在安全性问题上，建议选用 <code>POST</code> 方法。<code>GET</code> 方法将表单参数直接放在应用程序的 <code>URL</code> 中，这样网络窥探者可以很轻松地捕获它们，还可以从服务器的日志文件中进行摘录；而 <code>POST</code> 应用程序就没有安全方面的漏洞，在将参数作为单独的事务传输给服务器进行处理时，至少还可以采用加密的方法</li>\n<li>如果想在表单之外调用服务器端的应用程序，而且包括向其传递参数的过程，就要<br>采用 <code>GET</code> 方法，因为该方法允许把表单这样的参数包括进来作为 <code>URL</code> 的一部分。而另一方面，使用 <code>POST</code> 样式的应用程序却希望在 <code>URL</code> 后还能有一个来自浏览器额外的传输过程，其中传输的内容不能作为传统 <code>&lt;a&gt;</code>标签的内容</li>\n<li>数据传输方式<ul>\n<li>如果采用 <code>POST</code> 方法，浏览器将会按照下面两步来发送数据：首先，浏览器将与<code>action</code> 属性中指定的表单处理服务器建立联系，一旦建立连接之后，浏览器就会按分段传输的方法将数据发送给服务器；</li>\n<li>如果采用 <code>GET</code> 方法，这时浏览器会与表单处理服务器建立连接，然后直接在一个传输步骤中发送所有的表单数据：浏览器会将数据直接附在表单的 <code>action URL</code> 之后，这两者之间用问号进行分隔</li>\n</ul>\n</li>\n</ul>\n  <pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F;示例:\n&lt;form action&#x3D;&quot;form_action&quot; method&#x3D;&quot;get&quot; target&#x3D;&quot;_blank&quot;&gt;\n    First name: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;firstname&quot; &#x2F;&gt;&lt;br&#x2F;&gt;\n    Last name: &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;lastname&quot; &#x2F;&gt;&lt;br&#x2F;&gt;\n    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Submit&quot; &#x2F;&gt;\n&lt;&#x2F;form&gt;</code></pre>\n<p>  <em>refer to <a href=\"http://www.w3school.com.cn/tags/att_form_method.asp\">form 标签的 method 属性 | w3c</a></em></p>\n</li>\n<li><p>知识扩展</p>\n<ul>\n<li><code>radio</code> 如何分组：多组 <code>radio</code> 可通过不同的 <code>name</code> 值来区分<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;div class&#x3D;&quot;gender&quot;&gt;\n    &lt;label for&#x3D;&quot;gender&quot;&gt;性别:&lt;&#x2F;label&gt;\n    &lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;gender&quot; value&#x3D;&quot;male&quot;&gt;male\n    &lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;gender&quot; value&#x3D;&quot;female&quot;&gt;female\n    &lt;br&#x2F;&gt;\n    &lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;gender1&quot; value&#x3D;&quot;male&quot;&gt;male\n    &lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;gender1&quot; value&#x3D;&quot;female&quot;&gt;female\n&lt;&#x2F;div&gt;</code></pre></li>\n</ul>\n</li>\n</ul>\n<pre><code>- `placeholder` 属性\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;form action&#x3D;&quot;form_action&quot; method&#x3D;&quot;get&quot;&gt;\n    &lt;input type&#x3D;&quot;search&quot; name&#x3D;&quot;user_search&quot; placeholder&#x3D;&quot;Search&quot; &#x2F;&gt;\n    &lt;input type&#x3D;&quot;submit&quot; &#x2F;&gt;\n&lt;&#x2F;form&gt;</code></pre>\n    + 作用：提供可描述输入字段预期值的提示信息，该提示会在输入字段为空时显示，并会在字段获得焦点时消失\n    + `placeholder` 属性适用于以下的 `&lt;input&gt;` 类型：`text, search, url, telephone, email, password`\n\n\n- `hidden` 属性定义隐藏字段，隐藏字段对于用户是不可见的\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;input type&#x3D;&quot;hidden&quot; name&#x3D;&quot;field＿name&quot; value&#x3D;&quot;value&quot;&gt;</code></pre>\n    + 在表单中插入隐藏域的目的在于收集或发送信息，以利于被处理表单的程序所使用浏览者单击发送按钮发送表单的时候，隐藏域的信息也被一起发送到服务器\n    + 有些时候我们要给用户一信息，让他在提交表单时提交上来以确定用户身份，如sessionkey，等等．当然这些东西也能用cookie实现，但使用隐藏域就简单的多了；而且不会有浏览器不支持，用户禁用cookie的烦恼\n    + 当一个`form`里有多个提交按钮，使程序能够分清楚到底用户是按那一个按钮提交\n    上来的；可以写一个隐藏域，然后在每一个按钮处加上\n    `onclick=&quot;document.form.command.value=&quot;xx&quot;&quot;`然后我们接到数据后先检查`command`的值就会知道用户是按的那个按钮提交上来的\n    + 有时候一个网页中有多个form，我们知道多个form是不能同时提交的，但有时这些 `form`确实相互作用，我们就可以在form中添加隐藏域来使它们联系起来\n\n    *refer to [kuangruike的博客](http://blog.csdn.net/kuangruike/article/details/52127450)*\n\n\n- `label` 标签为 `input`元素定义标注，它不会向用户呈现任何特殊效果\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;form&gt;\n    &lt;label for&#x3D;&quot;male&quot;&gt;Male&lt;&#x2F;label&gt;\n    &lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;sex&quot; id&#x3D;&quot;male&quot; &#x2F;&gt;\n    &lt;br &#x2F;&gt;\n    &lt;label for&#x3D;&quot;female&quot;&gt;Female&lt;&#x2F;label&gt;\n    &lt;input type&#x3D;&quot;radio&quot; name&#x3D;&quot;sex&quot; id&#x3D;&quot;female&quot; &#x2F;&gt;\n&lt;&#x2F;form&gt;</code></pre>\n    + 当在 `label` 元素内点击文本时，就会触发此控件，即当用户选择该标签时，浏览器就会自动将焦点转到和标签相关的表单控件\n    + `for` 属性可绑定到相关元素的 `id `属性的值\n</code></pre>\n","text":"HTML全局属性 HTML属性赋予元素意义和语境，全局属性可用于任何HTML元素 属性 Html5新添 描述 accesskey - 规定激活元素的快捷键 class - 规定元素的一个或多个类名（引用样式表中的类） contenteditable new 规定元素内容是否可编辑...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"Front-End","slug":"Front-End","count":11,"path":"api/categories/Front-End.json"}],"tags":[{"name":"form","slug":"form","count":1,"path":"api/tags/form.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HTML%E5%85%A8%E5%B1%80%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">HTML全局属性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#lt-form-gt-%E6%A0%87%E7%AD%BE%E7%9A%84%E5%AE%9A%E4%B9%89%E4%B8%8E%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">&lt;form&gt;标签的定义与用法</span></a></li></ol>","author":{"name":"GUOWEI","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/gavinst/PicGoCDN/img/imgqBcR3R9huDgTp7QY.png","link":"/","description":"◽浩瀚苍穹 须臾人生◽</br>◽蜉蝣天地 沧海一粟◽</br>◽吾生有涯 而知无涯◽","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Chrome DevTools概述","uid":"d3564f8ffa1c6b8f6c3543065b2d0b43","slug":"chromeDevTools","date":"2021-06-28T16:00:00.000Z","updated":"2022-01-21T10:10:38.307Z","comments":true,"path":"api/articles/chromeDevTools.json","keywords":"webDesign","cover":[],"text":" ChromeDevTools 是一套内置于Chrome中的Web开发和调试工具，可用来对网站进行迭代、调试和分析 打开方式 在Chrome菜单中选择 更多工具 &gt; 开发者工具 在页面元素上右键点击，选择 “检查” 使用快捷键 Ctrl+Shift+I/F12 (Windo...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Front-End","slug":"Front-End","count":11,"path":"api/categories/Front-End.json"},{"name":"DevTools","slug":"Front-End/DevTools","count":1,"path":"api/categories/Front-End/DevTools.json"}],"tags":[{"name":"chrome","slug":"chrome","count":1,"path":"api/tags/chrome.json"},{"name":"devTools","slug":"devTools","count":1,"path":"api/tags/devTools.json"}],"author":{"name":"GUOWEI","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/gavinst/PicGoCDN/img/imgqBcR3R9huDgTp7QY.png","link":"/","description":"◽浩瀚苍穹 须臾人生◽</br>◽蜉蝣天地 沧海一粟◽</br>◽吾生有涯 而知无涯◽","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"浏览器兼容","uid":"19f52058a99f2254fe7ff9487e081e12","slug":"浏览器兼容","date":"2021-06-17T16:00:00.000Z","updated":"2022-01-21T10:12:26.741Z","comments":true,"path":"api/articles/浏览器兼容.json","keywords":"webDesign","cover":null,"text":" CSS Hack 问题：不同的流览器或某同一的浏览器的不同版本，对CSS的支持及解析结果不一样，导致生成的页面效果不一样 目的：在不同的浏览器中得到一致的页面效果 方案：针对不同的浏览器编写特定的 CSS 样式，让它能够同时兼容不同的浏览器，即 CSS Hack 浏览器兼容的思...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"Front-End","slug":"Front-End","count":11,"path":"api/categories/Front-End.json"},{"name":"CSS","slug":"Front-End/CSS","count":8,"path":"api/categories/Front-End/CSS.json"}],"tags":[{"name":"css-hack","slug":"css-hack","count":1,"path":"api/tags/css-hack.json"},{"name":"css-tools","slug":"css-tools","count":1,"path":"api/tags/css-tools.json"}],"author":{"name":"GUOWEI","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/gavinst/PicGoCDN/img/imgqBcR3R9huDgTp7QY.png","link":"/","description":"◽浩瀚苍穹 须臾人生◽</br>◽蜉蝣天地 沧海一粟◽</br>◽吾生有涯 而知无涯◽","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}