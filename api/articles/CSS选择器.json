{"title":"CSS选择器","uid":"293e70d253857898df9697c5f4a04e1b","slug":"CSS选择器","date":"2022-01-21T10:15:07.650Z","updated":"2022-01-21T10:26:09.694Z","comments":true,"path":"api/articles/CSS选择器.json","keywords":"webDesign","cover":[],"content":"<h3 id=\"class-和-id-的使用场景\"><a href=\"#class-和-id-的使用场景\" class=\"headerlink\" title=\"class 和 id 的使用场景\"></a><code>class</code> 和 <code>id</code> 的使用场景</h3><ul>\n<li>类选择器（Class selectors）<ul>\n<li>通过设置元素的 <code>class</code> 属性，可以为元素指定类名，类名由开发者自己指定</li>\n<li>在写样式表时，类选择器是以英文句号 <code>.</code> 开头的</li>\n<li>为了将类选择器的样式与元素关联，必须将 <code>class</code> 指定为一个适当的值</li>\n<li>文档中的多个元素可以拥有同一个类名<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;h1 class&#x3D;&quot;important&quot;&gt;\n    This heading is very important.\n&lt;&#x2F;h1&gt;\n\n&lt;p class&#x3D;&quot;important&quot;&gt;\n    This paragraph is very important.\n&lt;&#x2F;p&gt;</code></pre>\n选择所有类名为<code>important</code>的元素：<br/><pre class=\"line-numbers language-none\"><code class=\"language-none\">.important &#123;\n    color: red;\n&#125;</code></pre></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><code>ID</code>选择器（ID selectors）<ul>\n<li>通过设置元素的 <code>id</code> 属性为该元素制定<code>ID</code>，<code>ID</code>名由开发者指定</li>\n<li>在写样式表时，<code>ID</code> 选择器是以 <code>#</code> 开头的</li>\n<li>每个<code>ID</code>在文档中必须是唯一的 <br/><pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;p id&#x3D;&quot;intro&quot;&gt;\n    This is a paragraph of introduction.\n&lt;&#x2F;p&gt;</code></pre>\n选择<code>ID</code>为<code>intro</code>的元素：<br/><pre class=\"line-numbers language-none\"><code class=\"language-none\">#intro &#123;\n    font-weight: bold;\n&#125;</code></pre></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"CSS选择器类别\"><a href=\"#CSS选择器类别\" class=\"headerlink\" title=\"CSS选择器类别\"></a><code>CSS</code>选择器类别</h3><ul>\n<li><p>选择器的类别<br><img src=\"http://www.z4a.net/images/2017/10/10/1034a12.png\" alt=\"1034a12.png\"></p>\n</li>\n<li><p>常用的选择器</p>\n<ul>\n<li>类选择器：<code>.class &#123;color: lightbule; &#125;</code></li>\n<li><code>id</code>选择器：<code>#id &#123;color: lightbule; &#125;</code></li>\n<li>通用选择器：<code>* &#123;color: lightbule; &#125;</code></li>\n<li>标签选择器：<code>p &#123;color: lightbule; &#125;</code></li>\n<li>组合使用<ul>\n<li><code>#nav li &#123;color: lightbule; &#125;</code></li>\n<li><code>p.class.class &#123;color: lightbule; &#125;</code></li>\n<li><code>div[class=error] &#123;color: lightbule; &#125;</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>几种常见伪类选择器</p>\n<ul>\n<li><p><code>:checked</code>表示任何处于选中状态的<code>radio</code>，<code>checkbox</code>，或<code>select</code>元素中的<code>option</code>元素</p>\n<ul>\n<li><code>input[type=&quot;radio&quot;]:checked</code> 表示页面上的所有选中的radio按钮</li>\n<li><code>input[type=&quot;checkbox&quot;]:checked</code> 表示页面上的所有选中的checkbox按钮</li>\n<li><code>option:checked</code> 表示页面上的所有选中的select的选项<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;* any &quot;checkable&quot; element *&#x2F;\n:checked &#123;\n    width: 50px;\n    height: 50px;\n&#125;\n\n&#x2F;* only radio elements *&#x2F;\ninput[type&#x3D;&quot;radio&quot;]:checked &#123;\n    margin-left: 25px;\n&#125;\n\n&#x2F;* only checkbox elements *&#x2F;\ninput[type&#x3D;&quot;checkbox&quot;]:checked &#123;\n    display: none;\n&#125;\n\n&#x2F;* only option elements *&#x2F;\noption:checked &#123;\n    color: red;\n&#125;</code></pre></li>\n</ul>\n</li>\n<li><p><code>:first-child</code> 代表了父元素下的第一个元素</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;* HTML示例 *&#x2F;\n&lt;div&gt;\n    &lt;p&gt;This p is styled, as it is a p AND the first child of its parent.&lt;&#x2F;p&gt;\n    &lt;p&gt;This p is not styled; it is not the first child!&lt;&#x2F;p&gt;\n&lt;&#x2F;div&gt;</code></pre>\n<p>以下<code>CSS</code>只对第一个<code>p</code>标签生效：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">p:first-child &#123;\n    color: lime;\n    background-color: black;\n    padding: 5px;\n&#125;</code></pre></li>\n<li><p><code>:nth-child(an+b)</code> 匹配在父元素下第 <code>an+b</code> 个节点的元素，<code>n</code> 为正值或零，<code>a</code>和<code>b</code>都必须为整数</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">0n+3，匹配兄弟元素中的第三个；\n1n+0，匹配父级下的每一个元素；\n2n+0，匹配第2，4，6...个元素，可用&#96;even&#96;代替；\n2n+1，匹配第1，3，5...个元素，可用&#96;odd&#96;代替；</code></pre>\n<ul>\n<li><code>tr:nth-child(2n+1)</code>或<code>tr:nth-child(odd)</code> - - 匹配HTML表格中的奇数行；</li>\n<li><code>tr:nth-child(2n)</code>或<code>tr:nth-child(even)</code> - - 匹配HTML表格中的偶数行;</li>\n<li><code>span:nth-child(1)</code> - - 匹配子元素中第一个且为<code>span</code>的标签，同<code>:first-child</code>；</li>\n<li><code>span:nth-child(-n+3)</code> - - 匹配前三个子元素中的<code>span</code>标签</li>\n</ul>\n</li>\n<li><p><code>:nth-last-child(an+b)</code> 语法同上，不过是从结尾处开始反序计数</p>\n</li>\n<li><p><code>:first-of-type</code> 匹配兄弟元素各种类别中第一次出现的元素</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;* HTML示例 *&#x2F;\n&lt;div&gt;\n    &lt;span&gt;This span is first and will be lime&lt;&#x2F;span&gt;\n    &lt;span&gt;This span is second and will bot&lt;&#x2F;span&gt;\n    &lt;span&gt;what about this &lt;em&gt;nested element(new one and will be lime)&lt;&#x2F;em&gt;&lt;&#x2F;span&gt;\n    &lt;strike&gt;This is another type(new one and will be lime)&lt;&#x2F;strike&gt;\n    &lt;span&gt;This span is fourth.&lt;&#x2F;span&gt;\n&lt;&#x2F;div&gt;</code></pre>\n<p>以下<code>CSS</code>只对同类别的第一次出现的的标签生效：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">div :first-of-type &#123;\n    color: lime;\n&#125;</code></pre></li>\n<li><p><code>:focus</code>通过键盘或鼠标激活焦点时生效（例如表单输入）；和<code>:active</code>的差异分析</p>\n<ul>\n<li>默认情况下，<code>:active</code>和<code>:focus</code>都处于未触发状态；</li>\n<li>通过<code>tab</code>键循环来<strong>选中</strong>可聚焦元素（<code>a</code>，<code>input</code>，<code>textarea</code>等）,会触发<code>:focus</code>但不影响<code>:active</code>；</li>\n<li>当<strong>点击</strong>（鼠标点击或选中后按<code>space</code>键）不可聚焦元素时，会触发<code>:active</code>，不影响<code>:focus</code>；</li>\n<li>当<strong>点击</strong>可聚焦元素时，会同时触发<code>:active</code>和<code>:focus</code>；</li>\n<li>按照先后定义的优先级规则，若<code>:focus</code>位于之后，则会覆盖<code>:active</code>使其失效</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>选择器示例</p>\n  <pre class=\"line-numbers language-none\"><code class=\"language-none\">#header&#123; &#125;                     - - id 为 header 下的所有元素\n.header&#123; &#125;                     - - 类为 header 下的所有元素\n.header .logo&#123; &#125;               - - 类为 header 下所有 logo 类下的元素\n.header.mobile&#123; &#125;              - - 同时在同级类 header 和 mobile 下的元素\n.header p, .header h3&#123; &#125;       - - 类为 header 下所有 p 标签和 h3 标签中的元素\n#header .nav&gt;li&#123; &#125;             - - id 为 header 下所有 nav 类下的第一级 li 标签中的元素\n#header a:hover&#123; &#125;             - - id 为 header 下所有 a:hover 伪类中的元素\n#header .logo~p&#123; &#125;             - - id 为 header 下所有 logo 类之后的同级元素中所有含 p 标签中的元素\n#header input[type&#x3D;&quot;text&quot;]&#123; &#125;  - - id 为 header 下所有 input 标签中属性类型为 text 的元素\n\ndiv:first-child       - - 匹配父级元素下的第一个子元素且该元素为 div 的元素；\ndiv:first-of-type     - - 匹配兄弟元素中 div 元素类别中的第一个 div ；\ndiv :first-child      - - 匹配 div 元素下第一个子元素；\ndiv :first-of-type    - - 匹配 div 元素下每种子元素类别中的第一个元素</code></pre>\n\n<p><em>refer to <a href=\"https://stackoverflow.com/questions/1677990/what-is-the-difference-between-focus-and-active\">What is the difference between :focus and :active? | stackoverflow</a>，<a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Introduction_to_CSS/Pseudo-classes_and_pseudo-elements\">Pseudo-classes and pseudo-elements | MDN</a>，<a href=\"https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Selectors\">Selectors introduction | MDN</a></em></p>\n</li>\n</ul>\n<h3 id=\"CSS-样式优先级\"><a href=\"#CSS-样式优先级\" class=\"headerlink\" title=\"CSS 样式优先级\"></a><code>CSS</code> 样式优先级</h3><ul>\n<li><p>一般而言，样式优先级可通过权重来体现，按照 a-b-c-d 的类别及次序计算权重</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">*              &#123;&#125;  &#x2F;* a&#x3D;0 b&#x3D;0 c&#x3D;0 d&#x3D;0 -&gt; specificity &#x3D; 0,0,0,0 *&#x2F;\nli             &#123;&#125;  &#x2F;* a&#x3D;0 b&#x3D;0 c&#x3D;0 d&#x3D;1 -&gt; specificity &#x3D; 0,0,0,1 *&#x2F;\nli::first-line &#123;&#125;  &#x2F;* a&#x3D;0 b&#x3D;0 c&#x3D;0 d&#x3D;2 -&gt; specificity &#x3D; 0,0,0,2 *&#x2F;\nul li          &#123;&#125;  &#x2F;* a&#x3D;0 b&#x3D;0 c&#x3D;0 d&#x3D;2 -&gt; specificity &#x3D; 0,0,0,2 *&#x2F;\nul ol+li       &#123;&#125;  &#x2F;* a&#x3D;0 b&#x3D;0 c&#x3D;0 d&#x3D;3 -&gt; specificity &#x3D; 0,0,0,3 *&#x2F;\nh1 + *[rel&#x3D;up] &#123;&#125;  &#x2F;* a&#x3D;0 b&#x3D;0 c&#x3D;1 d&#x3D;1 -&gt; specificity &#x3D; 0,0,1,1 *&#x2F;\nul ol li.red   &#123;&#125;  &#x2F;* a&#x3D;0 b&#x3D;0 c&#x3D;1 d&#x3D;3 -&gt; specificity &#x3D; 0,0,1,3 *&#x2F;\nli.red.level   &#123;&#125;  &#x2F;* a&#x3D;0 b&#x3D;0 c&#x3D;2 d&#x3D;1 -&gt; specificity &#x3D; 0,0,2,1 *&#x2F;\n#x34y          &#123;&#125;  &#x2F;* a&#x3D;0 b&#x3D;1 c&#x3D;0 d&#x3D;0 -&gt; specificity &#x3D; 0,1,0,0 *&#x2F;\nstyle&#x3D;&quot;&quot;           &#x2F;* a&#x3D;1 b&#x3D;0 c&#x3D;0 d&#x3D;0 -&gt; specificity &#x3D; 1,0,0,0 *&#x2F;</code></pre>\n<ul>\n<li>a：计值 n，0，0，0；指代内联样式</li>\n<li>b：计值 0，n，0，0；指代<code>id</code>选择器</li>\n<li>c：计值 0，0，n，0；指代其他属性（class，属性选择器）和伪类（pseudo-classes）</li>\n<li>d：计值 0，0，0，n；指代标签选择器和伪元素（pseudo-elements）</li>\n</ul>\n<p>  <em><strong>note:</strong></em></p>\n<ul>\n<li>通配符<code>*</code>，子选择器，相邻选择器等，计值 0，0，0，0</li>\n<li>类别在前的拥有更高的优先级</li>\n<li>同类别中，权重更大的拥有更高的优先级</li>\n<li>同一元素中，后定义的样式规则优先于先定义的</li>\n</ul>\n</li>\n<li><p><code>CSS</code> 的继承性，指的是应用在一个标签上的那些 <code>CSS</code> 属性被传到其子标签上</p>\n<ul>\n<li>最近的“祖先样式”比其他“祖先样式”优先级高<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- 类名为 son 的 div 的 color 为 blue --&gt;\n&lt;div style&#x3D;&quot;color: red&quot;&gt;\n    &lt;div style&#x3D;&quot;color: blue&quot;&gt;\n        &lt;div class&#x3D;&quot;son&quot;&gt;&lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n&lt;&#x2F;div&gt;</code></pre></li>\n<li>“直接样式”比“祖先样式”优先级高<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;!-- 类名为 son 的 div 的 color 为 blue --&gt;\n&lt;div style&#x3D;&quot;color: red&quot;&gt;\n    &lt;div class&#x3D;&quot;son&quot; style&#x3D;&quot;color: blue&quot;&gt;&lt;&#x2F;div&gt;\n&lt;&#x2F;div&gt;</code></pre></li>\n</ul>\n</li>\n<li><p><code>!important</code>规则将优先于其他正常声明的规则，不推荐使用该规则，使用后会破坏正常优先级次序，不利于的debug</p>\n<ul>\n<li>应该使用的情况<ul>\n<li>存在设定了全站样式的CSS文件，同时在元素上使用了内联样式；此时可在全局的<code>CSS</code>文件中写一些<code>!important</code>的样式来覆盖掉那些直接写在元素上的内联样式</li>\n<li>类似在外层有 <code>#id</code> ，要使 <code>.class</code> 的段落变成红色的情况<pre class=\"line-numbers language-none\"><code class=\"language-none\">#id p &#123; color: blue; &#125;\n    \np.class &#123; color: red !important; &#125;</code></pre></li>\n</ul>\n</li>\n<li>覆盖 <code>!important</code> 规则<ul>\n<li>再添加一条带 <code>!important</code> 的CSS规则，给这个给选择器更高的优先级（添加一个标签，<code>#id</code>或<code>.class</code>）<pre class=\"line-numbers language-none\"><code class=\"language-none\">table td    &#123; height: 50px !important; &#125;\n.myTable td &#123; height: 50px !important; &#125;\n#myTable td &#123; height: 50px !important; &#125;</code></pre></li>\n<li>使用相同的选择器，但是置于已有的样式之后<pre class=\"line-numbers language-none\"><code class=\"language-none\">td &#123; height: 50px !important; &#125;</code></pre></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><em>refer to <a href=\"https://www.w3.org/TR/CSS2/cascade.html#specified-value\">specified value | w3c</a>，<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity\">Specificity - CSS | MDN</a>，<a href=\"https://segmentfault.com/a/1190000003860309\">CSS 样式优先级 | segmentfault</a></em></p>\n<h3 id=\"CSS-链接的四种状态\"><a href=\"#CSS-链接的四种状态\" class=\"headerlink\" title=\"CSS 链接的四种状态\"></a><code>CSS</code> 链接的四种状态</h3><ul>\n<li><p>链接的四种状态</p>\n<ul>\n<li><code>a:link</code> 未访问的状态</li>\n<li><code>a:visited</code> 已访问的状态</li>\n<li><code>a:hover</code> 鼠标悬停时的状态</li>\n<li><code>a:active</code> 点击时那一刻的状态</li>\n</ul>\n</li>\n<li><p>四个伪类具有相同的权重，因此依据先后定义的顺序来确定优先级，后定义的优先级更高</p>\n<ul>\n<li>按照<code>w3c</code>规定的顺序为：<code>a:link</code>/<code>a:visited</code> - <code>a:hover</code> - <code>a:active</code>；（常被助记为LoVe&amp;HAte）<ul>\n<li>未访问链接的两种属性：<code>a:link</code>和<code>a:hover</code>，若<code>a:link</code>在后，即使处于悬停状态，也会覆盖<code>a:hover</code>的定义而致其失效；</li>\n<li>已访问链接的两种属性：<code>a:visited</code>和<code>a:hover</code>,若<code>a:visited</code>在后，同样地，也会覆盖<code>a:hover</code>的定义；</li>\n<li>若<code>a:hover</code>位于点击时的状态<code>a:active</code>之后，悬停状态也会覆盖点击时的激活状态而致其失效；</li>\n<li>而<code>a:link</code>和<code>a:visited</code>的前后顺序并不影响<code>a:visited</code>后的状态</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","text":"class 和 id 的使用场景 类选择器（Class selectors） 通过设置元素的 class 属性，可以为元素指定类名，类名由开发者自己指定 在写样式表时，类选择器是以英文句号 . 开头的 为了将类选择器的样式与元素关联，必须将 class 指定为一个适当的值 文档中...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"Front-End","slug":"Front-End","count":6,"path":"api/categories/Front-End.json"},{"name":"CSS","slug":"Front-End/CSS","count":4,"path":"api/categories/Front-End/CSS.json"}],"tags":[{"name":"css","slug":"css","count":2,"path":"api/tags/css.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#class-%E5%92%8C-id-%E7%9A%84%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">class 和 id 的使用场景</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CSS%E9%80%89%E6%8B%A9%E5%99%A8%E7%B1%BB%E5%88%AB\"><span class=\"toc-text\">CSS选择器类别</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CSS-%E6%A0%B7%E5%BC%8F%E4%BC%98%E5%85%88%E7%BA%A7\"><span class=\"toc-text\">CSS 样式优先级</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CSS-%E9%93%BE%E6%8E%A5%E7%9A%84%E5%9B%9B%E7%A7%8D%E7%8A%B6%E6%80%81\"><span class=\"toc-text\">CSS 链接的四种状态</span></a></li></ol>","author":{"name":"Gavinst","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/gavinst/PicGoCDN/img/imgqBcR3R9huDgTp7QY.png","link":"/","description":"🔸🔹🔶❌🔷🔸🔹<br>寄蜉蝣于天地 渺沧海之一粟","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"How to connect CentOS8 VM to internet via NAT mode","uid":"0723a0f3da0efde08b22864279957623","slug":"CentOS8-VM-NAT-Mode","date":"2021-08-14T16:00:00.000Z","updated":"2022-01-21T09:27:46.097Z","comments":true,"path":"api/articles/CentOS8-VM-NAT-Mode.json","keywords":"webDesign","cover":[],"text":" 基本原理 通过VMnet8网卡实现主机与虚拟机之间的通信，在NAT模式中，主机网卡直接与虚拟NAT设备相连，然后虚拟NAT设备与虚拟DHCP服务器一起连接在虚拟交换机VMnet8上，这样就实现了虚拟机联网 启用VMware网址转换服务 win10WIN+R打开搜索框，输入ser...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"VMware","slug":"VMware","count":1,"path":"api/categories/VMware.json"}],"tags":[{"name":"vmware","slug":"vmware","count":1,"path":"api/tags/vmware.json"},{"name":"NAT","slug":"NAT","count":1,"path":"api/tags/NAT.json"},{"name":"centOS8","slug":"centOS8","count":1,"path":"api/tags/centOS8.json"}],"author":{"name":"Gavinst","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/gavinst/PicGoCDN/img/imgqBcR3R9huDgTp7QY.png","link":"/","description":"🔸🔹🔶❌🔷🔸🔹<br>寄蜉蝣于天地 渺沧海之一粟","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}